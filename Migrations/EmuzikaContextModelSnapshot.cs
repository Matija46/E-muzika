// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using web.Data;

#nullable disable

namespace web.Migrations
{
    [DbContext(typeof(EmuzikaContext))]
    partial class EmuzikaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("web.Models.Izvajalec", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("poslusalci")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Izvajalec", (string)null);
                });

            modelBuilder.Entity("web.Models.IzvajalecPesem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IzvajalecID")
                        .HasColumnType("int");

                    b.Property<int>("PesemID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IzvajalecID");

                    b.HasIndex("PesemID");

                    b.ToTable("IzvajalecPesem", (string)null);
                });

            modelBuilder.Entity("web.Models.Pesem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Album")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dolzina")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Pesem", (string)null);
                });

            modelBuilder.Entity("web.Models.IzvajalecPesem", b =>
                {
                    b.HasOne("web.Models.Izvajalec", "izvajalec")
                        .WithMany("izvajalecPesems")
                        .HasForeignKey("IzvajalecID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("web.Models.Pesem", "pesem")
                        .WithMany("izvajalecPesems")
                        .HasForeignKey("PesemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("izvajalec");

                    b.Navigation("pesem");
                });

            modelBuilder.Entity("web.Models.Izvajalec", b =>
                {
                    b.Navigation("izvajalecPesems");
                });

            modelBuilder.Entity("web.Models.Pesem", b =>
                {
                    b.Navigation("izvajalecPesems");
                });
#pragma warning restore 612, 618
        }
    }
}
